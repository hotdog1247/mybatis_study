<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mybatis_study.mappers.StudentMapper">
	<sql id="selectSQL">
		select stud_id, name, email, dob, phone from students
	</sql>

	<sql id="whereSQL">
		<where>
			<if test="studId ! = null">
				stud_id=#{studId}
			</if>
		</where>
	</sql>

	<select id="selectStudentByNo" parameterType="Student"
		resultType="Student">
		<include refid="selectSQL" />
		<include refid="whereSQL" />
	</select>

	<resultMap type="Student" id="stdResult">
		<id column="stud_id" property="studId" />
		<result column="f" property="phone.countryCode" />
		<result column="m" property="phone.stateCode" />
		<result column="l" property="phone.number" />
	</resultMap>

	<select id="selectStudentByNoWithResultMap"
		parameterType="Student" resultMap="stdResult">
		select stud_id, name, email, dob,
		phone,
		substring(phone, 1, 3) as f,
		substring(phone, 5, 3) as m,
		substring(phone, 9, 4) as l
		from students where stud_id = #{studId};
	</select>

	<select id="selectStudentByAll" resultType="Student">
		<include refid="selectSQL" />
	</select>

	<insert id="insertStudent" parameterType="Student">
		insert into students(stud_id, name, email, phone, dob) 
		values(#{studId}, #{name}, #{email}, #{phone}, #{dob})
	</insert>

	<insert id="insertStudentAutoInc" parameterType="Student"
		useGeneratedKeys="true" keyProperty="studId">
		insert into students(name, email, phone, dob) 
		values (#{name}, #{email}, #{phone}, #{dob})
	</insert>

	<insert id="insertStudentOracle" parameterType="Student">
		<selectKey keyProperty="studId" resultType="int"
			order="BEFORE">
			SELECT ELEARNING.STUD_ID_SEQ.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO STUDENTS(STD_ID, NAME, EMAIL, PHONE, DOB)
		VALUES(#{studId},#{name},#{email},#{phone},#{dob})
	</insert>

	<insert id="insertStudentTrigger" parameterType="Student">
		INSERT INTO STUDENTS(STUD_ID, NAME, EMAIL, PHONE, DOB)
		VALUES(#{studId},#{name},#{email},#{phone},#{dob})
		<selectKey keyProperty="studId" resultType="int"
			order="AFTER">
			SELECT ELEARNING.STUD_ID_SEQ.CURRVAL FROM DUAL
		</selectKey>
	</insert>

	<delete id="deleteStudent" parameterType="int">
		delete from students
		where stud_id=#{studId}
	</delete>

	<update id="updateStudent" parameterType="Student">
		update students
		set
		name=#{name}, email=#{email}, phone=#{phone}, dob=#{dob}
		where
		stud_id=#{studId}
	</update>

	<resultMap id="StudentResult" type="Student">
		<id property="studId" column="stud_id" />
		<result property="name" column="name" />
		<result property="email" column="email" />
		<result property="phone" column="phone" />
		<result property="dob" column="dob" />
	</resultMap>

	<select id="selectStudentByAllForResutlMap" resultMap="StudentResult">
		<include refid="selectSQL"/>
	</select>
	
	<select id="selectStudentByAllForHashMap" resultType="map">
		<include refid="selectSQL" />
	</select>
	
	<resultMap type="Student" id="StudentResult">
		<id property="studId" column="stud_id"/>
		<result property="name" column="name"/>
		<result property="email" column="email"/>
		<result property="phone" column="phone"/>
		<result property="dob" column="dob"/>
	</resultMap>
	
	<resultMap id="StudentAssociation" type="Student" extends="StudentResult">
		<association property="address" resultMap="mybatis_study.mappers.AddressMapper.AddressResult"/>
	</resultMap>
	
	<select id="selectStudentByNoAssociation" parameterType="Student" resultMap="StudentAssociation">
		select stud_id, name , email, phone, dob, a.addr_idm street, city, state, zip, country
			from students s join addresses a on s.addr_id=a.addr_id
		<include refid="whereSQL"/>
	</select>
</mapper>